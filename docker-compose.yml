version: "3.2"

services:
  publisher:
    build:
      context: ./
      dockerfile: DockerfilePublisher
    container_name: was-publisher
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - 8080:8080
    networks:
      - publisher-network
    environment:
      - PYTHONPATH=${PYTHONPATH}:./publisher
      - RABBITMQ_USER=alertsuser
      - RABBITMQ_PASS=alertspass
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_VHOST=alerts

  subscriber:
    build:
      context: ./
      dockerfile: DockerfileSubscriber
    container_name: was-subscriber
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - subscriber-network
    environment:
      - PYTHONPATH=${PYTHONPATH}:./subscriber
      - RABBITMQ_USER=alertsuser
      - RABBITMQ_PASS=alertspass
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_VHOST=alerts

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: was-rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - publisher-network
      - subscriber-network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    environment:
      - RABBITMQ_DEFAULT_USER=alertsuser
      - RABBITMQ_DEFAULT_PASS=alertspass
      - RABBITMQ_DEFAULT_VHOST=alerts

networks:
  publisher-network:
  subscriber-network: